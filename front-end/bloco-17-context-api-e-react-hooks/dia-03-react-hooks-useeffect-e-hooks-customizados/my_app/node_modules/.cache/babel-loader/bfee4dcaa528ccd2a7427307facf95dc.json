{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\n\nfunction useTimer() {\n  _s();\n\n  const [number, setNumber] = useState(1);\n  const [isMultiple, setMultiple] = useState(false);\n  const [timer, setTimer] = useState(1);\n  const TIMER_INTERVAL = 1000;\n  const NUMBER_TIMEOUT = 10000;\n  const MAX_RANDOM = 100;\n\n  const increaseTimerInterval = () => setTimer(timer => timer + 1);\n\n  const verifyMultiple = randomNumber => {\n    if (randomNumber % 3 === 0 || randomNumber % 5 === 0) {\n      setMultiple(true);\n      setTimeout(() => setMultiple(false), MESSAGE_TIMEOUT);\n    }\n  };\n\n  const handleRandonNumber = () => {\n    const randomNumber = Math.round(Math.floor(Math.random() * MAX_RANDOM) + MIN_RANDOM);\n    verifyMultiple(randomNumber);\n    setNumber(randomNumber);\n    setTimer(0);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleRandonNumber, NUMBER_TIMEOUT);\n    const setTimerInterval = setInterval(increaseTimerInterval, TIMER_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      clearInterval(setTimerInterval);\n    };\n  });\n  return {\n    number,\n    isMultiple,\n    timer\n  };\n}\n\n_s(useTimer, \"KRU5vxyx+xYZiIRMwkCebizbcgE=\");\n\nexport default useTimer;","map":{"version":3,"sources":["/home/alexcssilva/Documentos/trybe-exercicios/front-end/bloco-17-context-api-e-react-hooks/dia-03-react-hooks-useeffect-e-hooks-customizados/my_app/src/hooks/useTimer.js"],"names":["useEffect","useTimer","number","setNumber","useState","isMultiple","setMultiple","timer","setTimer","TIMER_INTERVAL","NUMBER_TIMEOUT","MAX_RANDOM","increaseTimerInterval","verifyMultiple","randomNumber","setTimeout","MESSAGE_TIMEOUT","handleRandonNumber","Math","round","floor","random","MIN_RANDOM","interval","setInterval","setTimerInterval","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BF,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMK,cAAc,GAAG,IAAvB;AACA,QAAMC,cAAc,GAAG,KAAvB;AACA,QAAMC,UAAU,GAAG,GAAnB;;AAEA,QAAMC,qBAAqB,GAAG,MAAMJ,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAA5C;;AAEA,QAAMM,cAAc,GAAGC,YAAY,IAAI;AACrC,QAAIA,YAAY,GAAG,CAAf,KAAqB,CAArB,IAA0BA,YAAY,GAAG,CAAf,KAAqB,CAAnD,EAAsD;AACpDR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAS,MAAAA,UAAU,CAAC,MAAMT,WAAW,CAAC,KAAD,CAAlB,EAA2BU,eAA3B,CAAV;AACD;AACF,GALD;;AAOA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,UAAMH,YAAY,GAAGI,IAAI,CAACC,KAAL,CACnBD,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,KAAgBV,UAA3B,IAAyCW,UADtB,CAArB;AAGAT,IAAAA,cAAc,CAACC,YAAD,CAAd;AACAX,IAAAA,SAAS,CAACW,YAAD,CAAT;AACAN,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAPD;;AASAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,QAAQ,GAAGC,WAAW,CAACP,kBAAD,EAAqBP,cAArB,CAA5B;AACA,UAAMe,gBAAgB,GAAGD,WAAW,CAACZ,qBAAD,EAAwBH,cAAxB,CAApC;AACA,WAAO,MAAM;AACXiB,MAAAA,aAAa,CAACH,QAAD,CAAb;AACAG,MAAAA,aAAa,CAACD,gBAAD,CAAb;AACD,KAHD;AAID,GAPQ,CAAT;AASA,SAAO;AAAEvB,IAAAA,MAAF;AAAUG,IAAAA,UAAV;AAAsBE,IAAAA;AAAtB,GAAP;AACD;;GArCQN,Q;;AAsCT,eAAeA,QAAf","sourcesContent":["import { useEffect } from \"react\";\n\nfunction useTimer() {\n  const [number, setNumber] = useState(1);\n  const [isMultiple, setMultiple] = useState(false);\n  const [timer, setTimer] = useState(1);\n\n  const TIMER_INTERVAL = 1000;\n  const NUMBER_TIMEOUT = 10000;\n  const MAX_RANDOM = 100;\n\n  const increaseTimerInterval = () => setTimer(timer => timer + 1);\n\n  const verifyMultiple = randomNumber => {\n    if (randomNumber % 3 === 0 || randomNumber % 5 === 0) {\n      setMultiple(true);\n      setTimeout(() => setMultiple(false), MESSAGE_TIMEOUT)\n    }\n  };\n\n  const handleRandonNumber = () => {\n    const randomNumber = Math.round(\n      Math.floor(Math.random() * MAX_RANDOM) + MIN_RANDOM\n    );\n    verifyMultiple(randomNumber);\n    setNumber(randomNumber);\n    setTimer(0);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleRandonNumber, NUMBER_TIMEOUT);\n    const setTimerInterval = setInterval(increaseTimerInterval, TIMER_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      clearInterval(setTimerInterval);\n    };\n  }, );\n\n  return { number, isMultiple, timer };\n}\nexport default useTimer;"]},"metadata":{},"sourceType":"module"}